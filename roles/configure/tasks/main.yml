---
#
# /etc/passwd contains one line for each user account, with seven fields
# delimited by colons (“:”). These fields are:
#
# key  login name
# 0    optional encrypted password
# 1    numerical user ID
# 2    numerical group ID
# 3    user name or comment field
# 4    user home directory
# 5    optional user command interpreter
#
# The reason we need to find home_directory this way is is because ansible_env is for the "connected" user, and
# the connected user may not match the become_user
- name: "Determine home directory of {{ configure_user }}"
  ansible.builtin.getent:
    database: passwd
    key: "{{ configure_user }}"
    split: ":"
  tags:
    - configure

- name: Deploy dotfiles
  tags:
    - configure
  vars:
    home_dir: "{{ ansible_facts.getent_passwd[configure_user][4] }}"
    dotfiles_dir: "{{ (home_dir, 'Documents', '.dotfiles') | ansible.builtin.path_join }}"
    backup_dir: "{{ (home_dir, '.backup') | ansible.builtin.path_join }}"
    bashrc: "{{ (home_dir, '.bashrc') | ansible.builtin.path_join }}"
    bashrc_backup: "{{ (backup_dir, '.bashrc') | ansible.builtin.path_join }}"
    bash_aliases: "{{ (home_dir, '.bash_aliases') | ansible.builtin.path_join }}"
    bash_aliases_backup: "{{ (backup_dir, '.bash_aliases') | ansible.builtin.path_join }}"
  become: true
  become_user: "{{ configure_user }}"
  block:
    - name: Ensure dotfiles repository is cloned locally
      ansible.builtin.git:
        repo: https://github.com/DomenickD3/.dotfiles.git
        dest: "{{ dotfiles_dir }}"
        version: master
        accept_hostkey: true
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Create .backup directory to move system files before stow
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        mode: "0755"
      register: created_backup_dir

    - name: Backup {{ bashrc }}
      ansible.builtin.command: mv {{ bashrc }} {{ bashrc_backup }}
      args:
        creates: "{{ bashrc_backup }}"
        removes: "{{ bashrc }}"
      when: created_backup_dir.changed # noqa: no-handler

    - name: Backup {{ bash_aliases }}
      ansible.builtin.command: mv {{ bash_aliases }} {{ bash_aliases_backup }}
      args:
        creates: "{{ bash_aliases_backup }}"
        removes: "{{ bash_aliases }}"
      when: created_backup_dir.changed # noqa: no-handler

    - name: Build modules list
      ansible.builtin.find:
        paths: "{{ dotfiles_dir }}"
        file_type: directory
        recurse: false
      register: modules

    - name: Stow dotfiles
      with_items: "{{ modules.files }}"
      environment:
        STOW_DIR: "{{ dotfiles_dir }}"
      ansible.builtin.command: stow -R {{ item.path | basename }} --target={{ home_dir }}
      changed_when: false

    - name: Unstow dotfiles
      with_items: "{{ modules.files }}"
      environment:
        STOW_DIR: "{{ dotfiles_dir }}"
      ansible.builtin.command: stow -D {{ item.path | basename }} --target={{ home_dir }}
      changed_when: false
      tags:
        - unstow
        - never
